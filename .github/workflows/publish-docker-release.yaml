# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Publish docker release

on:
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Compute the artifact name from commit's SHA short
        id: vars
        run: echo "artifact_name=coco-package-$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_OUTPUT
      - name: Download artifact
        uses: bettermarks/action-artifact-download@0.3.0
        with:
          repo: le-quentin/cocobot
          token: ${{ secrets.GITHUB_TOKEN }}
          artifact_name: ${{ steps.vars.outputs.artifact_name }}
      - name: Unzip artifact to libs dir
        run: |
          mkdir -p build/libs
          unzip ${{ steps.vars.outputs.artifact_name }} -d build/libs/

      - # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/amd64,linux/arm/v7,linux/arm64
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ github.event.release.tag_name }}
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ steps.buildx.outputs.platforms }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
